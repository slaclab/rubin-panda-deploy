---
# Source: bigmon/charts/main/templates/configmap.yaml
# JEDI and server configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: bigmon-dev-main-configmap
data:
  config.py: |-
        

  local.py: |-
---
# Source: bigmon/charts/main/templates/deployment.yaml
# pv claim
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: bigmon-dev-main
  labels:
    helm.sh/chart: main-0.1.0
    app.kubernetes.io/name: main
    app.kubernetes.io/instance: bigmon-dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  storageClassName: wekafs--sdf-k8s01
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
# Source: bigmon/charts/main/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: bigmon-dev-main
  labels:
    helm.sh/chart: main-0.1.0
    app.kubernetes.io/name: main
    app.kubernetes.io/instance: bigmon-dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: https
      protocol: TCP
      name: https
  selector:
    app.kubernetes.io/name: main
    app.kubernetes.io/instance: bigmon-dev
---
# Source: bigmon/charts/main/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bigmon-dev-main
  labels:
    helm.sh/chart: main-0.1.0
    app.kubernetes.io/name: main
    app.kubernetes.io/instance: bigmon-dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: main
      app.kubernetes.io/instance: bigmon-dev
  template:
    metadata:
      labels:
        app.kubernetes.io/name: main
        app.kubernetes.io/instance: bigmon-dev
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: main
          securityContext:
            {}
          image: "ekaravak/bigmon:0.0.2"
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c"]
          args:
            - sleep 30;
              start-daemon.sh all
          ports:
            - name: https
              containerPort: 443
              protocol: TCP
          resources:
            {}
          volumeMounts:
              # - name: bigmon-dev-main-logs
              #  mountPath: /var/log/main/
              - name: bigmon-dev-main-configmap
                mountPath: /data/idds/configmap
      volumes:
        - name: bigmon-dev-main-logs
          persistentVolumeClaim:
            claimName: bigmon-dev-main
        - name: bigmon-dev-main-configmap
          configMap:
              name: bigmon-dev-main-configmap
---
# Source: bigmon/charts/main/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bigmon-dev-main
  labels:
    helm.sh/chart: main-0.1.0
    app.kubernetes.io/name: main
    app.kubernetes.io/instance: bigmon-dev
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
    nginx.ingress.kubernetes.io/auth-tls-verify-client: optional
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/secure-backends: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
    - hosts:
        - "bigmon-dev-main.cern.ch"
      secretName: 
  rules:
    - host: "bigmon-dev-main.cern.ch"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: bigmon-dev-main
                port:
                  number: 443
